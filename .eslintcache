[{"C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\index.js":"1","C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\reportWebVitals.js":"2","C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\App.js":"3","C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\component\\Home.jsx":"4","C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\component\\List.jsx":"5","C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\component\\Update.jsx":"6","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\index.js":"7","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\reportWebVitals.js":"8","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\App.js":"9","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\Update.jsx":"10","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\Home.jsx":"11","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\Welcome.jsx":"12","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\Title.jsx":"13","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\News.jsx":"14","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\List.jsx":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1259,"mtime":1612716221499,"results":"19","hashOfConfig":"17"},{"size":3504,"mtime":1612170530643,"results":"20","hashOfConfig":"17"},{"size":779,"mtime":1608833499031,"results":"21","hashOfConfig":"17"},{"size":2662,"mtime":1612174007606,"results":"22","hashOfConfig":"17"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":1631,"mtime":1613832418782,"results":"26","hashOfConfig":"24"},{"size":2666,"mtime":1613128375466,"results":"27","hashOfConfig":"24"},{"size":5839,"mtime":1613834949891,"results":"28","hashOfConfig":"24"},{"size":736,"mtime":1613680066085,"results":"29","hashOfConfig":"24"},{"size":214,"mtime":1613823046692,"results":"30","hashOfConfig":"24"},{"size":4297,"mtime":1613835733511,"results":"31","hashOfConfig":"24"},{"size":798,"mtime":1613830491543,"results":"32","hashOfConfig":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"ritg0s",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1jch5q3",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\index.js",[],["74","75"],"C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\reportWebVitals.js",[],"C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\App.js",["76"],"C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\component\\Home.jsx",["77","78","79","80","81"],"import React, {useState} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport List from './List'\r\n\r\nexport default function Home(props) {\r\n    const [list, setList] = useState(props.list)\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [from, setFrom] = useState()\r\n    const [to, setTo] = useState()\r\n    const [inputValue, setInputValue] = useState()\r\n    var history = props.list\r\n    let fromFunc = (e) =>{\r\n        let fromSelect = e.target.value\r\n        setFrom(fromSelect.split(','))\r\n        console.log(fromSelect[0])\r\n    }\r\n\r\n    let toFunc = (e) =>{\r\n        let toSelect = e.target.value\r\n        setTo(toSelect.split(','))\r\n    }\r\n\r\n    let inputFunc = (e) =>{\r\n        let inputVal = e.target.value\r\n        setInputValue(inputVal)\r\n        if(inputVal.length >0){\r\n            setDisabled(false)\r\n        }else{\r\n            setDisabled(true) \r\n        }\r\n    }\r\n    // זוהי הפונקציה המרכזית לחישוב ההמרה \r\n    let calculation = () =>{\r\n        let result = 0;\r\n        // נוסחה לחישוב ההמרה עצמה \r\n        result = (from[0] * inputValue) / to[0];\r\n        // הצגה של התוצאה \r\n        alert(`${result}`)\r\n        // תנאי: במידה ואין היסטוריית המרות אז פשוט לעשות שינוי כולל לסטייס על ידי פונקציה\r\n        if(list == ''){\r\n            history = [{numberOfCalculation: 0, from: from[1], to: to[1], fromValue : from[1], toValue: to[1], sum: result,value:inputValue}]\r\n            props.setNewList(history)\r\n        // במידה ויש היסטוריית המרות אז אני משתמש בנוסחה שמוסיפה אובייקט חדש למערך בלי למחוק את הישן\r\n        }else{\r\n            history = [...history,{numberOfCalculation: 0, from: from[1], to: to[1], fromValue : from[1], toValue: to[1], sum: result,value:inputValue}]\r\n            props.setNewList(history)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Exchange</h1>\r\n            <p>From: </p>\r\n            {/* פה הישתמשתי בלולאת מאפ על מנת ליצור תפריט סלקט כדי שאוכל לעדכן אותו בהתאם להוספת מטבעות  */}\r\n            <select onChange={fromFunc}>\r\n                <option selected value=''>type</option>\r\n                {props.coins.map(item =>{\r\n                    return(\r\n                    <option value={item.type}>{item.type[1]}</option>\r\n                    )\r\n                })}\r\n            </select>\r\n            <input onChange={inputFunc} type=\"number\"/>\r\n            <p>TO:</p>\r\n            <select onChange={toFunc}>\r\n            <option selected value=''>type</option>\r\n            {props.coins.map(item =>{\r\n                    return(\r\n                    <option value={item.type}>{item.type[1]}</option>\r\n                    )\r\n                })}\r\n            </select><br/>\r\n            {/* פה הישתמשתי בסטייט על מנת לקבוע אם הכפתור יהיה לחיץ או לא .. בהתאם לתוכן האינפוט */}\r\n            <button onClick={calculation} disabled={disabled}>start</button>\r\n           <Link to='/update'><button>update</button></Link>\r\n            <button>facebook</button>\r\n            <button>change list</button>\r\n        <div>\r\n        <List history = {list}\r\n        delete = {props.deleteFunc}\r\n        />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\component\\List.jsx",["82","83","84","85","86"],"import React, {useState} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function List(props) {\r\n\r\n    let deleteList = (e,index) =>{\r\n        console.log(props.history)\r\n        console.log(index)\r\n        props.delete(props.history,index)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.history.map((item, index)=>{\r\n                return( \r\n                <div>\r\n                    <p>#{index +1}</p>\r\n                    <p>{`from ${item.fromValue} to ${item.toValue}`}</p>\r\n                    <p>{`${item.value}=${item.sum}`}</p>\r\n                    <button onClick={(e)=>{deleteList(e,index)}}>X</button>\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n",["87","88"],"C:\\Users\\SNIR\\Desktop\\amazon\\wed developer\\react\\Change\\src\\component\\Update.jsx",["89","90","91","92","93","94","95"],"import React, {useState} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Update(props) {\r\n\r\n\r\n    // var regex = new RegExp(\"^[a-zA-Z0-9 ]+$\"); רק אותיות באנגלית ומספרים\r\n\r\n    const [newCoins, setNewCoins] =useState(props.coins)\r\n    //יצרתי סטייט כדי לכפות רינדור על ריאקט\r\n    const [render, setRender] = useState(0)\r\n    var allCoinsObj = props.coins\r\n    // ביטוי רגולי זה מאפשר להכניס רק אותיות באנגלית \r\n    const RegEx = new RegExp('^[a-zA-Z]+$')\r\n    var valType =''\r\n    var newValue = 0\r\n    var flag = false\r\n\r\n    let validType = (e) =>{\r\n        valType = e.target.value\r\n        // בדיקה על ידי פונקציה אם הערך תואם את התנאי של הביטוי הרגולרי \r\n        if(!RegEx.test(valType)){\r\n            alert('ERROR')\r\n        }\r\n    }\r\n\r\n    let value = (e) =>{\r\n        newValue = Number(e.target.value) \r\n    }\r\n\r\n    // פונקציה להוספת מטבע חדש או לעדכן ערך של מטבע קיים \r\n    let newCoin = () =>{\r\n        allCoinsObj.map((item, index) => {\r\n           if(valType ==  item.type[1]){\r\n           allCoinsObj[index].value = newValue\r\n           console.log(allCoinsObj)\r\n           flag = true\r\n           }\r\n        })\r\n        // תנאי על דגל שאומר שבמידה שאין מטבע כזה פשוט להוסיף חדש \r\n        if(!flag){\r\n        allCoinsObj = [...allCoinsObj,{type:[newValue,valType],value:Number(newValue)}]\r\n        }\r\n        // שליחת עידכון למערך מטבעות בדף הראשי (עידכון שמשנה אותו או מוסף מטבע חדש)\r\n        props.updateFunc(allCoinsObj)\r\n        flag = false\r\n        // ביצוע הרינדור בכפייה \r\n        setRender(render+1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <table id=\"customers\">\r\n            <tr>\r\n                <th>TYPE</th>\r\n                <th>VALUE</th>\r\n            </tr>\r\n            {allCoinsObj.map(item=>{\r\n                return(\r\n                    <tr>\r\n                    <td>{item.type[1]}</td>\r\n                    <td>{item.value}</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </table>\r\n            <label>Type </label> \r\n            <input onChange={validType} type=\"text\"/><br/>\r\n            <label>New value </label>\r\n            <input onChange={value} type=\"number\"/><br/>\r\n            <button onClick={newCoin}>UPDATE</button>\r\n            <Link to= '/'><button>BACK</button></Link>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\index.js",[],["96","97"],"C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\reportWebVitals.js",[],"C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\App.js",["98","99"],"import React, {useState} from 'react'\nimport { HashRouter as Router, Switch, Route, } from \"react-router-dom\";\nimport {AnimatePresence, motion} from 'framer-motion';\nimport Welcome from './component/Welcome'\nimport Home from './component/Home.jsx'\nimport './App.css';\nimport Update from './component/Update.jsx';\n\nfunction App(){\n\n  var obj = []\n\n  fetch('https://api.ratesapi.io/api/latest?base=USD')\n  .then(response => response.json())\n  .then((data) => {\n    data.rates = Object.entries(data.rates)\n    data.rates.map(item => {\n      obj.push({type:[item[1],item[0]],value:item[1]})\n    })\n  })\n  // סטייט שמחזיק את המערך אובייקטים הראשי של המטבעות הדיפולטיבים\n\n  const [coinsList, setCoinsList] = useState(obj)\n\n  const [list ,setList] =useState([])\n\n  let history = (history) =>{\n    setList(history)\n  }\n  \n  let update = (newObg) =>{\n    setCoinsList(newObg)\n  }\n  let deleteList = (oldList,i) =>{\n    oldList = oldList.filter((post, index) => i !== index)\n    setList(oldList)\n}  \n    \n  return (\n    <div className=\"App\">\n     \n      <Router>\n        <AnimatePresence>\n        <Switch>\n        <Route exact path='/' component={()=>{return(<Welcome/>)}}/>\n\n          <Route path='/Home' component={()=>{return(<Home setNewList={history} list ={list} coins={coinsList} deleteFunc = {deleteList}/>)}}>\n          </Route>\n          <Route path='/update' component={()=>{return(<Update coins={coinsList}\n          updateFunc={update}\n          />)}}>\n          </Route>\n        </Switch>\n            </AnimatePresence>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\Update.jsx",["100","101","102","103","104","105","106"],"import React, {useState} from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Update(props) {\r\n\r\n\r\n    // var regex = new RegExp(\"^[a-zA-Z0-9 ]+$\"); רק אותיות באנגלית ומספרים\r\n\r\n    const [newCoins, setNewCoins] =useState(props.coins)\r\n    //יצרתי סטייט כדי לכפות רינדור על ריאקט\r\n    const [render, setRender] = useState(0)\r\n    var allCoinsObj = props.coins\r\n    // ביטוי רגולי זה מאפשר להכניס רק אותיות באנגלית \r\n    const RegEx = new RegExp('^[a-zA-Z]+$')\r\n    var valType =''\r\n    var newValue = 0\r\n    var flag = false\r\n\r\n    let validType = (e) =>{\r\n        valType = e.target.value\r\n        // בדיקה על ידי פונקציה אם הערך תואם את התנאי של הביטוי הרגולרי \r\n        if(!RegEx.test(valType)){\r\n            alert('ERROR')\r\n        }\r\n    }\r\n\r\n    let value = (e) =>{\r\n        newValue = Number(e.target.value) \r\n    }\r\n\r\n    // פונקציה להוספת מטבע חדש או לעדכן ערך של מטבע קיים \r\n    let newCoin = () =>{\r\n        allCoinsObj.map((item, index) => {\r\n           if(valType ==  item.type[1]){\r\n           allCoinsObj[index].value = newValue\r\n           console.log(allCoinsObj)\r\n           flag = true\r\n           }\r\n        })\r\n        // תנאי על דגל שאומר שבמידה שאין מטבע כזה פשוט להוסיף חדש \r\n        if(!flag){\r\n        allCoinsObj = [...allCoinsObj,{type:[newValue,valType],value:Number(newValue)}]\r\n        }\r\n        // שליחת עידכון למערך מטבעות בדף הראשי (עידכון שמשנה אותו או מוסף מטבע חדש)\r\n        props.updateFunc(allCoinsObj)\r\n        flag = false\r\n        // ביצוע הרינדור בכפייה \r\n        setRender(render+1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <table id=\"customers\">\r\n            <tr>\r\n                <th>TYPE</th>\r\n                <th>VALUE</th>\r\n            </tr>\r\n            {allCoinsObj.map(item=>{\r\n                return(\r\n                    <tr>\r\n                    <td>{item.type[1]}</td>\r\n                    <td>{item.value}</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </table>\r\n            <label>Type </label> \r\n            <input onChange={validType} type=\"text\"/><br/>\r\n            <label>New value </label>\r\n            <input onChange={value} type=\"number\"/><br/>\r\n            <button onClick={newCoin}>UPDATE</button>\r\n            <Link to= '/Home'><button>BACK</button></Link>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\Home.jsx",["107","108","109","110","111","112","113","114"],"import React, {useState} from 'react'\r\nimport {AnimatePresence, motion} from 'framer-motion';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from './List'\r\nimport Title from './Title';\r\nimport News from './News';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport arrow from './../media/circled-up.png'\r\n\r\nexport default function Home(props) {\r\n\r\n    const [coins, setCoins] = useState(props.coins)\r\n    const [list, setList] = useState(props.list)\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [from, setFrom] = useState()\r\n    const [to, setTo] = useState()\r\n    const [inputValue, setInputValue] = useState()\r\n    var coin = props.coins\r\n    var history = props.list\r\n    const useStyles = makeStyles({\r\n        InputLabel: {\r\n            width: 130,\r\n            marginLeft: '10px',\r\n            marginRight: '10px',\r\n        },\r\n        button:{\r\n            marginTop: '10px'\r\n        }\r\n    })\r\n    const classes = useStyles();\r\n\r\n    let fromFunc = (e) =>{\r\n        let fromSelect = e.target.value\r\n        setFrom(fromSelect)\r\n    }\r\n    let toFunc = (e) =>{\r\n        console.log(e.target.value)\r\n        let toSelect = e.target.value\r\n        setTo(toSelect)\r\n    }\r\n    let inputFunc = (e) =>{\r\n        let inputVal = e.target.value\r\n        setInputValue(inputVal)\r\n        if(inputVal.length >0){\r\n            setDisabled(false)\r\n        }else{\r\n            setDisabled(true) \r\n        }\r\n    }\r\n\r\n    // זוהי הפונקציה המרכזית לחישוב ההמרה \r\n    let calculation = () =>{\r\n        let result = 0;\r\n        // נוסחה לחישוב ההמרה עצמה \r\n        result = (to[0] * inputValue) / from[0];\r\n        // תנאי: במידה ואין היסטוריית המרות אז פשוט לעשות שינוי כולל לסטייס על ידי פונקציה\r\n        if(list == ''){\r\n            history = [{numberOfCalculation: 0, from: from[1], to: to[1], fromValue : from[1], toValue: to[1], sum: result,value:inputValue}]\r\n            props.setNewList(history)\r\n        // במידה ויש היסטוריית המרות אז אני משתמש בנוסחה שמוסיפה אובייקט חדש למערך בלי למחוק את הישן\r\n        }else{\r\n            history = [...history,{numberOfCalculation: 0, from: from[1], to: to[1], fromValue : from[1], toValue: to[1], sum: result,value:inputValue}]\r\n            props.setNewList(history)\r\n        }\r\n    }\r\n    const pageTransition = {\r\n        in: {\r\n            opacity: 1,\r\n            y:0\r\n        },\r\n        out: {\r\n            opacity: 0,\r\n            y:'-100%'\r\n        }\r\n    }\r\n    return (\r\n        <motion.div \r\n        initial='out'\r\n        animate='in'\r\n        exit='out'\r\n        variants={pageTransition}>\r\n            <News/>\r\n            <Title/>\r\n   {/* פה הישתמשתי בלולאת מאפ על מנת ליצור תפריט סלקט כדי שאוכל לעדכן אותו בהתאם לאובייקט שמתקבל  */}\r\n        <p className ='p'>\r\n        <h3>Amount</h3><br/>\r\n            <TextField  className={classes.InputLabel}\r\n         onChange={inputFunc}\r\n          id=\"outlined-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        /></p>\r\n        <p  className ='p'>\r\n            <h3>From </h3><br/>\r\n            <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Currency</InputLabel>\r\n        <Select\r\n         style = {{minWidth: '130px'}}\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          onChange={fromFunc}\r\n          label=\"Currency\">\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n            {coin.map(item =>{\r\n                let imgSrc = require(`./../media/${item.type[1]}.png`)\r\n                    return(\r\n                    <MenuItem value={item.type}> <img className='flags' src ={imgSrc.default}/> {item.type[1]}</MenuItem>\r\n                    )\r\n                })}\r\n\r\n        </Select>\r\n      </FormControl> \r\n      </p>\r\n          <img className ='arrow' src ={arrow}/>\r\n      <p  className ='p'>\r\n            <h3>To</h3><br/>\r\n        <FormControl variant=\"outlined\" className={classes.InputLabel}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Currency</InputLabel>\r\n        <Select\r\n         style = {{minWidth: '130px'}}\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          onChange={toFunc}\r\n          label=\"Currency\">\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          \r\n            {coin.map(item =>{\r\n                let imgSrc = require(`./../media/${item.type[1]}.png`)\r\n                    return(\r\n                        <MenuItem value={item.type}> <img className='flags' src ={imgSrc.default}/> {item.type[1]}</MenuItem>\r\n                    )\r\n                })}\r\n\r\n        </Select>\r\n      </FormControl> </p><br/>\r\n            {/* פה הישתמשתי בסטייט על מנת לקבוע אם הכפתור יהיה לחיץ או לא .. בהתאם לתוכן האינפוט */}\r\n            <Button   className={classes.button}  variant=\"outlined\" color=\"primary\"  onClick={calculation} disabled = {disabled}>start</Button >\r\n\r\n        <div>\r\n        <List history = {list}\r\n        delete = {props.deleteFunc}\r\n        />\r\n        </div>\r\n        </motion.div>\r\n    )\r\n}\r\n","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\Welcome.jsx",["115","116"],"import React from 'react'\r\nimport {useHistory} from 'react-router-dom';\r\nimport {AnimatePresence, motion} from 'framer-motion';\r\nimport Logo from \"./../media/logo_transparent.png\";\r\n\r\nexport default function Welcome() {\r\n    const history = useHistory();\r\n    const pageTransition = {\r\n        in: {\r\n            opacity: 1,\r\n            y:0\r\n        },\r\n        out: {\r\n            opacity: 0,\r\n            y:'-100%vh'\r\n        }\r\n    }\r\n    setTimeout(function(){\r\n        history.push('/Home'); }, 2000);\r\n    return (\r\n        <motion.div\r\n        initial='out'\r\n        animate='in'\r\n        exit='out'\r\n        variants={pageTransition}\r\n        >\r\n            <img className='logo' src={Logo}/>\r\n        </motion.div>\r\n    )\r\n}\r\n","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\Title.jsx",["117"],"import React from 'react'\r\nimport logo from \"./../media/logo.png\";\r\nexport default function Title() {\r\n    return (\r\n        <div>\r\n            <img className= 'responsive' src= {logo}/>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\News.jsx",["118","119","120","121"],"C:\\Users\\SNIR\\Desktop\\currencyExchange\\currencyExchange\\src\\component\\List.jsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":50,"nodeType":"128","messageId":"129","endLine":2,"endColumn":54},{"ruleId":"126","severity":1,"message":"130","line":2,"column":27,"nodeType":"128","messageId":"129","endLine":2,"endColumn":33},{"ruleId":"126","severity":1,"message":"131","line":2,"column":35,"nodeType":"128","messageId":"129","endLine":2,"endColumn":41},{"ruleId":"126","severity":1,"message":"132","line":2,"column":43,"nodeType":"128","messageId":"129","endLine":2,"endColumn":48},{"ruleId":"126","severity":1,"message":"133","line":6,"column":18,"nodeType":"128","messageId":"129","endLine":6,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":40,"column":17,"nodeType":"136","messageId":"137","endLine":40,"endColumn":19},{"ruleId":"126","severity":1,"message":"138","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":24},{"ruleId":"126","severity":1,"message":"130","line":2,"column":27,"nodeType":"128","messageId":"129","endLine":2,"endColumn":33},{"ruleId":"126","severity":1,"message":"131","line":2,"column":35,"nodeType":"128","messageId":"129","endLine":2,"endColumn":41},{"ruleId":"126","severity":1,"message":"132","line":2,"column":43,"nodeType":"128","messageId":"129","endLine":2,"endColumn":48},{"ruleId":"126","severity":1,"message":"127","line":2,"column":50,"nodeType":"128","messageId":"129","endLine":2,"endColumn":54},{"ruleId":"122","replacedBy":"139"},{"ruleId":"124","replacedBy":"140"},{"ruleId":"126","severity":1,"message":"130","line":2,"column":27,"nodeType":"128","messageId":"129","endLine":2,"endColumn":33},{"ruleId":"126","severity":1,"message":"131","line":2,"column":35,"nodeType":"128","messageId":"129","endLine":2,"endColumn":41},{"ruleId":"126","severity":1,"message":"132","line":2,"column":43,"nodeType":"128","messageId":"129","endLine":2,"endColumn":48},{"ruleId":"126","severity":1,"message":"141","line":10,"column":12,"nodeType":"128","messageId":"129","endLine":10,"endColumn":20},{"ruleId":"126","severity":1,"message":"142","line":10,"column":22,"nodeType":"128","messageId":"129","endLine":10,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":34,"column":39,"nodeType":"145","messageId":"146","endLine":34,"endColumn":41},{"ruleId":"134","severity":1,"message":"135","line":35,"column":23,"nodeType":"136","messageId":"137","endLine":35,"endColumn":25},{"ruleId":"122","replacedBy":"147"},{"ruleId":"124","replacedBy":"148"},{"ruleId":"126","severity":1,"message":"149","line":3,"column":26,"nodeType":"128","messageId":"129","endLine":3,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":17,"column":25,"nodeType":"145","messageId":"146","endLine":17,"endColumn":27},{"ruleId":"126","severity":1,"message":"130","line":2,"column":27,"nodeType":"128","messageId":"129","endLine":2,"endColumn":33},{"ruleId":"126","severity":1,"message":"131","line":2,"column":35,"nodeType":"128","messageId":"129","endLine":2,"endColumn":41},{"ruleId":"126","severity":1,"message":"132","line":2,"column":43,"nodeType":"128","messageId":"129","endLine":2,"endColumn":48},{"ruleId":"126","severity":1,"message":"141","line":10,"column":12,"nodeType":"128","messageId":"129","endLine":10,"endColumn":20},{"ruleId":"126","severity":1,"message":"142","line":10,"column":22,"nodeType":"128","messageId":"129","endLine":10,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":34,"column":39,"nodeType":"145","messageId":"146","endLine":34,"endColumn":41},{"ruleId":"134","severity":1,"message":"135","line":35,"column":23,"nodeType":"136","messageId":"137","endLine":35,"endColumn":25},{"ruleId":"126","severity":1,"message":"150","line":2,"column":9,"nodeType":"128","messageId":"129","endLine":2,"endColumn":24},{"ruleId":"126","severity":1,"message":"151","line":18,"column":12,"nodeType":"128","messageId":"129","endLine":18,"endColumn":17},{"ruleId":"126","severity":1,"message":"152","line":18,"column":19,"nodeType":"128","messageId":"129","endLine":18,"endColumn":27},{"ruleId":"126","severity":1,"message":"133","line":19,"column":18,"nodeType":"128","messageId":"129","endLine":19,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":63,"column":17,"nodeType":"136","messageId":"137","endLine":63,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":119,"column":50,"nodeType":"155","endLine":119,"endColumn":96},{"ruleId":"153","severity":1,"message":"154","line":126,"column":11,"nodeType":"155","endLine":126,"endColumn":49},{"ruleId":"153","severity":1,"message":"154","line":144,"column":54,"nodeType":"155","endLine":144,"endColumn":100},{"ruleId":"126","severity":1,"message":"150","line":3,"column":9,"nodeType":"128","messageId":"129","endLine":3,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":27,"column":13,"nodeType":"155","endLine":27,"endColumn":47},{"ruleId":"153","severity":1,"message":"154","line":6,"column":13,"nodeType":"155","endLine":6,"endColumn":55},{"ruleId":"126","severity":1,"message":"156","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":21},{"ruleId":"126","severity":1,"message":"157","line":10,"column":10,"nodeType":"128","messageId":"129","endLine":10,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":21,"column":38,"nodeType":"136","messageId":"137","endLine":21,"endColumn":40},{"ruleId":"126","severity":1,"message":"158","line":60,"column":13,"nodeType":"128","messageId":"129","endLine":60,"endColumn":18},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'setList' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.",["159"],["160"],"'newCoins' is assigned a value but never used.","'setNewCoins' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["159"],["160"],"'motion' is defined but never used.","'AnimatePresence' is defined but never used.","'coins' is assigned a value but never used.","'setCoins' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardActions' is defined but never used.","'Button' is defined but never used.","'withe' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]